import styles from '../styles/Home.module.css'
import { Configuration, Session, V0alpha2Api } from '@ory/kratos-client'
import { AxiosError } from 'axios'
import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'

// Initialize the Ory Kratos SDK which will connect to the
// /api/.ory/ route we created in the previous step.
const kratos = new V0alpha2Api(
  new Configuration({
    // We use Ory Kratos' Public API
    basePath: '/api/.ory/api/kratos/public'
  })
)

const Home: NextPage = () => {
  // Contains the current session or undefined.
  const [session, setSession] = useState<Session>()

  // The URL we can use to log out.
  const [logoutUrl, setLogoutUrl] = useState<string>()

  // The error message or undefined.
  const [error, setError] = useState<any>()

  useEffect(() => {
    // If the session or error have been loaded, do nothing.
    if (session || error) {
      return
    }

    // Try to load the session.
    kratos
      .toSession()
      .then(({ data: session }) => {
        // Session loaded successfully! Let's set it.
        setSession(session)

        // Since we have a session, we can also get the logout URL.
        return kratos
          .createSelfServiceLogoutFlowUrlForBrowsers()
          .then(({ data }) => {
            setLogoutUrl(data.logout_url)
          })
      })
      .catch((err: AxiosError) => {
        // An error occurred while loading the session or fetching
        // the logout URL. Let's show that!
        setError({
          error: err.toString(),
          data: err.response?.data
        })
      })
  }, [session, error])

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          {session ? (
            <>
              You are signed in using <a href="https://www.ory.sh/">Ory</a>!
            </>
          ) : (
            <>
              Please <a href={'/api/.ory/ui/login'}>sign in</a> or{' '}
              <a href={'/api/.ory/ui/login'}>sign up</a>!
            </>
          )}
        </h1>

        <p className={styles.description}>
          {session ? (
            <>
              <a href={'/api/.ory/ui/settings'}>Update your settings</a> or{' '}
              <a
                data-testid="logout"
                href={logoutUrl}
                aria-disabled={!logoutUrl}
              >
                sign out
              </a>
            </>
          ) : (
            <>
              To view this page, please{' '}
              <a href={'/api/.ory/ui/login'}>sign in</a> or{' '}
              <a href={'/api/.ory/ui/registration'}>create an account</a>!
            </>
          )}
        </p>

        <div className={styles.grid}>
          <a href="https://www.ory.sh/docs/kratos" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Ory Kratos features and API.</p>
          </a>

          <a href="https://www.ory.sh/docs" className={styles.card}>
            <h2>Deploy &rarr;</h2>
            <p>The easiest way to deploy Ory Kratos is on Ory Cloud!</p>
          </a>

          <a href="https://www.ory.sh/docs" className={styles.card}>
            <h2>Understand &rarr;</h2>
            <p>Read the accompanying blog post on the Ory Website!</p>
          </a>

          <a href="https://github.com/ory/kratos" className={styles.card}>
            <h2>GitHub &rarr;</h2>
            <p>Check out Ory Kratos on GitHub!</p>
          </a>
        </div>

        {session ? (
          <div className={styles.session}>
            <>
              <p>Find your session details below. </p>
              <pre className={styles.pre + ' ' + styles.code}>
                <code data-testid={'session'}>
                  {JSON.stringify(session, null, 2)}
                </code>
              </pre>
            </>
          </div>
        ) : null}
      </main>
    </div>
  )
}

export default Home
